/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class monkey_helper_GLJNI */

#include "JNIHelper.h"

#include "App.h"
#include "platform/android/GLViewAndroid.h"
#include "core/utils/Log.h"
#include "2d/scene/Scene2D.h"
#include "2d/entities/Quad.h"

#ifndef _Included_monkey_helper_GLJNI
#define _Included_monkey_helper_GLJNI
#ifdef __cplusplus
extern "C" {
#endif

USING_NS_MONKEY

jint JNI_OnLoad(JavaVM *vm, void *reserved) {
	JNIHlper::setJavaVM(vm);
    return JNI_VERSION_1_4;
}

/*
 * Class:     monkey_helper_GLJNI
 * Method:    onDrawFrame
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_monkey_helper_GLJNI_onDrawFrame(JNIEnv *, jclass) {
	App::getInstance()->update();
//	glClear(GL_COLOR_BUFFER_BIT);
}

/*
 * Class:     monkey_helper_GLJNI
 * Method:    onSurfaceChanged
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_monkey_helper_GLJNI_onSurfaceChanged(JNIEnv *env, jclass jc, jint width, jint height) {
	App::getInstance()->setViewport(0, 0, width, height);
}

/*
 * Class:     monkey_helper_GLJNI
 * Method:    onSurfaceCreated
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_monkey_helper_GLJNI_onSurfaceCreated(JNIEnv *env, jclass jc) {
	GLViewAndroid *glview = new GLViewAndroid();
	App::getInstance()->setOpenGLView(glview);
	App::getInstance()->setBackcolor(0x333333);
	
	Scene2D *scene = new Scene2D();
	App::getInstance()->addScene2D(scene);
	
	for (int i = 0; i < 15; i++) {
		for (int j = 0; j < 15; j++) {
			Quad *quad0 = Quad::create(400 * randomf(), 600 * randomf(), 0xFFFFFF * randomf(), 1.0f * randomf());
			quad0->setPosition(200 * randomf(), -600 * randomf(), 0.0f);
			scene->addChild(quad0);
		}
	}
}

#ifdef __cplusplus
}
#endif
#endif
